# jasypt
jasypt:
  encryptor:
    password: @JASYPT-ENCRYPTOR-PASSWORD@
server:
  port: ${SERVER_PORT:10005}
  ssl:
    # 开启证书
    enabled: @SSL-ENABLED@
    # 证书位置
    key-store: classpath:scg-keystore.p12
    # 证书别名
    key-alias: ${spring.application.name}
    # 秘钥类型
    key-store-type: PKCS12
    # 证书密码
    key-store-password: laokou
  http2:
    enabled: @SSL-ENABLED@
  shutdown: graceful
  servlet:
    encoding:
      charset: UTF-8
  undertow:
    threads:
      # 设置IO线程数，来执行非阻塞任务，负责多个连接数
      io: 16
      # 工作线程数
      worker: 512
    # 每块buffer的空间大小
    buffer-size: 2048
    # 分配堆外内存
    direct-buffers: true
spring:
  application:
    name: ${SERVICE_ID:laokou-iot}
  profiles:
    active: @PROFILE-ACTIVE@
  # 开启虚拟线程
  threads:
    virtual:
      enabled: true
  lifecycle:
    timeout-per-shutdown-phase: "2m"
  # security
  security:
    oauth2:
      resource-server:
        enabled: true
        request-matcher:
          ignore-patterns:
            GET:
              - /v3/api-docs/**=laokou-iot
              - /swagger-ui.html=laokou-iot
              - /swagger-ui/**=laokou-iot
              - /actuator/**=laokou-iot
              - /error=laokou-iot
              - /doc.html=laokou-iot
              - /webjars/**=laokou-iot
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: @DATASOURCE-DRIVER-CLASS-NAME@
          url: jdbc:@DATASOURCE-PLATFORM@://@DATASOURCE-HOST@:@DATASOURCE-PORT@/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-iot&useSSL=false
          username: ENC(l126CTjtLG8OkXRNs5aofcN96EQpbQmQorTqpnWFMvcysQLjNBEuX+9f6hLwdoEk)
          password: ENC(BhsqlMbKjWVxPseo9OX8osLuL2Y4rWfGTyBRXaZTsAdzZ1Z4rBewBmoXjf2Hnu4o)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 100
            minimum-idle: 30
            is-read-only: false
        iot:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: @DATASOURCE-DRIVER-CLASS-NAME@
          url: jdbc:@DATASOURCE-PLATFORM@://@DATASOURCE-HOST@:@DATASOURCE-PORT@/kcloud_platform_iot?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-iot&useSSL=false
          username: ENC(l126CTjtLG8OkXRNs5aofcN96EQpbQmQorTqpnWFMvcysQLjNBEuX+9f6hLwdoEk)
          password: ENC(BhsqlMbKjWVxPseo9OX8osLuL2Y4rWfGTyBRXaZTsAdzZ1Z4rBewBmoXjf2Hnu4o)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 100
            minimum-idle: 30
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: @DATASOURCE-DRIVER-CLASS-NAME@
          url: jdbc:@DATASOURCE-PLATFORM@://@DATASOURCE-HOST@:@DATASOURCE-PORT@/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-iot&useSSL=false
          username: ENC(l126CTjtLG8OkXRNs5aofcN96EQpbQmQorTqpnWFMvcysQLjNBEuX+9f6hLwdoEk)
          password: ENC(BhsqlMbKjWVxPseo9OX8osLuL2Y4rWfGTyBRXaZTsAdzZ1Z4rBewBmoXjf2Hnu4o)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 100
            minimum-idle: 30
            is-read-only: false
  data:
    redis:
      client-type: lettuce
      host: redis
      port: 6379
      password: ENC(BhsqlMbKjWVxPseo9OX8osLuL2Y4rWfGTyBRXaZTsAdzZ1Z4rBewBmoXjf2Hnu4o)
      connect-timeout: 60000ms #连接超时时长（毫秒）
      timeout: 60000ms #超时时长（毫秒）
      lettuce:
        pool:
          # 连接池最大连接数（使用负值表示无极限）
          max-active: -1
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1
          # 连接池最大空闲连接
          max-idle: 500
          # 连接池最小空间连接
          min-idle: 200
  cloud:
    # Loadbalancer配置
    loadbalancer:
      nacos:
        enabled: true
    # OpenFeign配置
    openfeign:
      http2client:
        enabled: false
      compression:
        response:
          enabled: false
        request:
          enabled: false
      # FeignAutoConfiguration、OkHttpFeignLoadBalancerConfiguration、OkHttpClient#getClient、FeignClientProperties、OptionsFactoryBean#getObject
      # 在BeanFactory调用getBean()时，不是调用getBean，而是调用getObject(),因此，getObject()相当于代理了getBean(),而且getObject()对Options初始化，是直接从openfeign.default获取配置值的
      okhttp:
        enabled: true
      circuitbreaker:
        enabled: true
      httpclient:
        hc5:
          enabled: false
        disable-ssl-validation: true
        max-connections: 500
        time-to-live: 10
        time-to-live-unit: minutes
        ok-http:
          read-timeout: 120s
      client:
        config:
          default:
            connectTimeout: 120000 #连接超时
            readTimeout: 120000 #读取超时
            logger-level: none
      lazy-attributes-resolution: true
    inetutils:
      ignored-interfaces:
        - docker0
        - veth.*

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    enabled: true
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: org.laokou.iot.web

# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    enabled: true
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  tracing:
    enabled: true
    propagation:
      type: w3c
    # 采样率 => 100%
    sampling:
      probability: 1
  otlp:
    tracing:
      endpoint: http://otel-collector:4317/v1/traces
      compression: gzip
      timeout: 10s
      transport: grpc
    metrics:
      export:
        enabled: false
  metrics:
    tags:
      application: ${spring.application.name}

# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn

logging:
  config: classpath:log4j2-@PROFILE-ACTIVE@.xml

rocketmq:
  producer:
    group: laokou_producer_group
  name-server: rocketmq-namesrv:9876
  consumer:
    pull-batch-size: 32

# Feign配置
feign:
  sentinel:
    enabled: true
    default-rule: default
    rules:
      # https://sentinelguard.io/zh-cn/docs/circuit-breaking.html
      default:
        - grade: 2 # 异常数策略
          count: 1 # 异常数模式下为对应的阈值
          timeWindow: 30 # 熔断时长，单位为 s（经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。ERROR_COUNT）
          statIntervalMs: 1000 # 统计时长（单位为 ms），如 60*1000 代表分钟级（1.8.0 引入）
          minRequestAmount: 5 # 熔断触发的最小请求数，请求数小于该值时即使异常比率超出阈值也不会熔断
